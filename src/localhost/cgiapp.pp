{$MODE OBJFPC}
{$SMARTLINK ON}
{$LONGSTRINGS ON}
program p;
uses
  sysutils;
var
  f    : file;
  buf  : string;
  count: cardinal;
  path : string;
begin
  path := getEnvironmentVariable('DOCUMENT_ROOT');

  writeln('Content-type: text/html');
  writeln;

  count := 0;
  SetLength(buf, 4096);

  Assign(f, path + '/cgiapp/top.txt');
  Reset(f, 1);
  while not eof(f) do
  begin
    BlockRead(f, pointer(buf)^, 4096, count);
    if count < 4096 then buf := copy(buf, 1, count);
    write(buf);
  end;
  Close(f);
  
  writeln('<ul>');
  writeln('<li><em>REMOTE_ADDR</em> = ', getEnvironmentVariable('REMOTE_ADDR'), '<br /><br />');
  writeln('IPv4 address of client.<br /><br /></li>');
  writeln('<li><em>SERVER_SOFTWARE</em> = ', getEnvironmentVariable('SERVER_SOFTWARE'), '<br /><br />');
  writeln('Server software description. Version and name of server.<br /><br /></li>');
  writeln('<li><em>DOCUMENT_ROOT</em> = ', getEnvironmentVariable('DOCUMENT_ROOT'), '<br /><br />');
  writeln('Root directory for current host.<br /><br /></li>');
  writeln('<li><em>SCRIPT_NAME</em> = ', getEnvironmentVariable('SCRIPT_NAME'), '<br /><br />');
  writeln('Filename of CGI-application. Path is relative to <em>DOCUMENT_ROOT</em>.<br /><br /></li>');
  writeln('<li><em>HTTP_USER_AGENT</em> = ', getEnvironmentVariable('HTTP_USER_AGENT'), '<br /><br />');
  writeln('String, which describes client software.<br /><br /></li>');
  writeln('<li><em>HTTP_HOST</em> = ', getEnvironmentVariable('HTTP_HOST'), '<br /><br />');
  writeln('Content of field <em>Host</em> of HTTP request.<br /><br /></li>');
  writeln('<li><em>HTTP_REFERER</em> = ', getEnvironmentVariable('HTTP_REFERER'), '<br /><br />');
  writeln('URL, client has come from. This string is sent by client software and is not trustly enought.<br /><br /></li>');
  writeln('<li><em>QUERY_STRING</em> = ', getEnvironmentVariable('QUERY_STRING'), '<br /><br />');
  writeln('If <em>REQUEST_METHOD</em> is <em>POST</em>, then all data sent by client is allocated here. Variables are divided by <em>;</em>.<br /><br /></li>');
  writeln('<li><em>REQUEST_METHOD</em> = ', getEnvironmentVariable('REQUEST_METHOD'), '<br /><br />');
  writeln('Can be <em>GET</em> or <em>POST</em> depending of HTTP request.</li>');
  writeln('</ul>');

  writeln('<h2>Command line parameters</h2>');
  writeln('<p>');
  writeln('You can use command line parameters. <strong>nYume</strong> automatically');
  writeln('send parameter 1 to all CGI-applications. Parameter 1 contains GET-data');
  writeln('even if method POST has been used.');
  writeln('<br /><br />');
  writeln('<em>Parameter 1</em> = ', ParamStr(1));
  writeln('<br /><br />');

  writeln('Parameter 0 is automatically generated by application and contains');
  writeln('full path to application.');
  writeln('<br /><br />');
  writeln('<em>Parameter 0</em> = ', ParamStr(0));
  writeln('</p>');

  writeln('<p>');
  writeln('Note, that by default, <em>current directory</em> is <strong>nYume</strong> directory ');
  writeln('but not <em>DOCUMENT_ROOT</em>! That is why you need always obviously define ');
  writeln('current working directory of CGI-application using <em>DOCUMENT_ROOT</em> ');
  writeln('environment variable.');
  writeln('');
  writeln('');
  writeln('');
  writeln('');
  writeln('');
  writeln('</p>');

  count := 0;
  SetLength(buf, 4096);

  Assign(f, path + '/cgiapp/bottom.txt');
  Reset(f, 1);
  while not eof(f) do
  begin
    BlockRead(f, pointer(buf)^, 4096, count);
    if count < 4096 then buf := copy(buf, 1, count);
    write(buf);
  end;
  Close(f);

end.
